{"ast":null,"code":"var _jsxFileName = \"/Users/bright/Desktop/Calendar-App/calendar-app/src/Components/CalendarTable/index.js\";\nimport React from 'react';\nimport { startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays } from 'date-fns';\nimport './style.css';\nimport CalendarDay from '../CalendarDay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarTable(_ref) {\n  let {\n    date\n  } = _ref;\n  const monthStart = startOfMonth(date);\n  const monthEnd = endOfMonth(monthStart);\n  const startDate = startOfWeek(monthStart);\n  const endDate = endOfWeek(monthEnd);\n  const rows = [];\n  const WEEK_DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  let days = [];\n  let day = startDate;\n  while (day <= endDate) {\n    for (let i = 0; i < 7; i++) {\n      days.push(day);\n      day = addDays(day, 1);\n    }\n    rows.push({\n      day,\n      days\n    });\n    days = [];\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"calendar-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: WEEK_DAYS.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows === null || rows === void 0 ? void 0 : rows.map(_ref2 => {\n        let {\n          day,\n          days\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(CalendarDay, {\n          day: day,\n          date: date,\n          days: days,\n          monthStart: monthStart\n        }, day.getTime(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = CalendarTable;\nexport default CalendarTable;\nvar _c;\n$RefreshReg$(_c, \"CalendarTable\");","map":{"version":3,"names":["React","startOfMonth","endOfMonth","startOfWeek","endOfWeek","addDays","CalendarDay","jsxDEV","_jsxDEV","CalendarTable","_ref","date","monthStart","monthEnd","startDate","endDate","rows","WEEK_DAYS","days","day","i","push","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","getTime","_c","$RefreshReg$"],"sources":["/Users/bright/Desktop/Calendar-App/calendar-app/src/Components/CalendarTable/index.js"],"sourcesContent":["import React from 'react';\nimport { startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays } from 'date-fns';\nimport './style.css'\nimport CalendarDay from '../CalendarDay';\n\nfunction CalendarTable({ date }) {\n  const monthStart = startOfMonth(date);\n  const monthEnd = endOfMonth(monthStart);\n  const startDate = startOfWeek(monthStart);\n  const endDate = endOfWeek(monthEnd);\n  const rows = [];\n  const WEEK_DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  let days = [];\n  let day = startDate;\n\n  while (day <= endDate) {\n    for (let i = 0; i < 7; i++) {\n      days.push(day);\n      day = addDays(day, 1);\n    }\n    rows.push({ day, days });\n    days = [];\n  }\n\n  return (\n    <table className=\"calendar-table\">\n      <thead>\n        <tr>\n          {WEEK_DAYS.map((day) => (\n            <th key={day}>{day}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {rows?.map(({ day, days }) => (\n          <CalendarDay key={day.getTime()} day={day} date={date} days={days} monthStart={monthStart} />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default CalendarTable;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,UAAU;AACpF,OAAO,aAAa;AACpB,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,aAAaA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAC7B,MAAME,UAAU,GAAGX,YAAY,CAACU,IAAI,CAAC;EACrC,MAAME,QAAQ,GAAGX,UAAU,CAACU,UAAU,CAAC;EACvC,MAAME,SAAS,GAAGX,WAAW,CAACS,UAAU,CAAC;EACzC,MAAMG,OAAO,GAAGX,SAAS,CAACS,QAAQ,CAAC;EACnC,MAAMG,IAAI,GAAG,EAAE;EACf,MAAMC,SAAS,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAEnE,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,GAAG,GAAGL,SAAS;EAEnB,OAAOK,GAAG,IAAIJ,OAAO,EAAE;IACrB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BF,IAAI,CAACG,IAAI,CAACF,GAAG,CAAC;MACdA,GAAG,GAAGd,OAAO,CAACc,GAAG,EAAE,CAAC,CAAC;IACvB;IACAH,IAAI,CAACK,IAAI,CAAC;MAAEF,GAAG;MAAED;IAAK,CAAC,CAAC;IACxBA,IAAI,GAAG,EAAE;EACX;EAEA,oBACEV,OAAA;IAAOc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC/Bf,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAAe,QAAA,EACGN,SAAS,CAACO,GAAG,CAAEL,GAAG,iBACjBX,OAAA;UAAAe,QAAA,EAAeJ;QAAG,GAATA,GAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACRpB,OAAA;MAAAe,QAAA,EACGP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,GAAG,CAACK,KAAA;QAAA,IAAC;UAAEV,GAAG;UAAED;QAAK,CAAC,GAAAW,KAAA;QAAA,oBACvBrB,OAAA,CAACF,WAAW;UAAqBa,GAAG,EAAEA,GAAI;UAACR,IAAI,EAAEA,IAAK;UAACO,IAAI,EAAEA,IAAK;UAACN,UAAU,EAAEA;QAAW,GAAxEO,GAAG,CAACW,OAAO,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAA8D;MAAA,CAC9F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ;AAACG,EAAA,GApCQtB,aAAa;AAsCtB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}